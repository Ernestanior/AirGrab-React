{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\17127\\\\Desktop\\\\IT\\\\react\\\\airGrab\\\\src\\\\page\\\\mine\\\\verificate\\\\inputCode\\\\AutoTabInput.jsx\";\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AutotabInput extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleTab = this.handleTab.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.autoFocus) {\n      setTimeout(() => {\n        this._input.focus();\n      }, 300);\n    }\n  }\n\n  handleChange(e) {\n    const input = e.target.value;\n\n    if (this.props.onChange) {\n      this.props.onChange(input);\n    }\n\n    this.handleTab(e);\n  }\n\n  handleDelete(e) {\n    const BACK_SPACE = 8;\n    const isBackSpaceKey = e.keyCode === BACK_SPACE;\n\n    if (isBackSpaceKey && e.target.value.length === 0) {\n      let previous = e.target;\n      previous = previous.previousElementSibling;\n\n      while (previous) {\n        if (previous === null) break;\n\n        if (previous.tagName.toLowerCase() === 'input') {\n          previous.focus();\n          break;\n        }\n      }\n    }\n  }\n\n  handleTab(e) {\n    const target = e.target;\n    const input = target.value;\n\n    if (input.length >= this.props.maxLength) {\n      let next = target;\n      next = next.nextElementSibling;\n\n      while (next) {\n        if (next === null) break;\n\n        if (next.tagName.toLowerCase() === 'input') {\n          next.focus();\n          break;\n        }\n      }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"input\", {\n      type: this.props.type,\n      name: this.props.name,\n      placeholder: this.props.hint,\n      maxLength: this.props.maxLength,\n      defaultValue: this.props.value,\n      onChange: this.handleChange,\n      onKeyDown: this.props.maxLength ? this.handleDelete : null,\n      style: this.props.style,\n      autoFocus: this.props.autoFocus,\n      ref: c => this._input = c,\n      value: this.props.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nAutotabInput.propTypes = {\n  name: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n  type: PropTypes.string,\n  hint: PropTypes.string,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  maxLength: PropTypes.number,\n  style: PropTypes.object,\n  autoFocus: PropTypes.bool\n};\nexport default AutotabInput;","map":{"version":3,"sources":["C:/Users/17127/Desktop/IT/react/airGrab/src/page/mine/verificate/inputCode/AutoTabInput.jsx"],"names":["React","PureComponent","PropTypes","AutotabInput","constructor","props","handleChange","bind","handleTab","handleDelete","componentDidMount","autoFocus","setTimeout","_input","focus","e","input","target","value","onChange","BACK_SPACE","isBackSpaceKey","keyCode","length","previous","previousElementSibling","tagName","toLowerCase","maxLength","next","nextElementSibling","render","type","name","hint","style","c","propTypes","string","func","isRequired","oneOfType","number","object","bool"],"mappings":"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","sourcesContent":["\r\nimport React, { PureComponent } from 'react'\r\nimport PropTypes from 'prop-types';\r\nclass AutotabInput extends PureComponent {\r\n  constructor(props) {\r\n    super(props)\r\n    this.handleChange = this.handleChange.bind(this)\r\n    this.handleTab = this.handleTab.bind(this)\r\n    this.handleDelete = this.handleDelete.bind(this)\r\n  }\r\n\r\n\r\n\r\n  componentDidMount() {\r\n    if (this.props.autoFocus) {\r\n      setTimeout(() => {\r\n        this._input.focus();\r\n      }, 300)\r\n    }\r\n  }\r\n  handleChange(e) {\r\n    const input = e.target.value\r\n    if (this.props.onChange) {\r\n      this.props.onChange(input)\r\n    }\r\n    this.handleTab(e)\r\n  }\r\n\r\n\r\n  handleDelete(e) {\r\n    const BACK_SPACE = 8\r\n    const isBackSpaceKey = e.keyCode === BACK_SPACE\r\n    if (isBackSpaceKey && e.target.value.length === 0) {\r\n      let previous = e.target\r\n      previous = previous.previousElementSibling\r\n      while (previous) {\r\n        if (previous === null) break\r\n        if (previous.tagName.toLowerCase() === 'input') {\r\n          previous.focus()\r\n          break\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  handleTab(e) {\r\n    const target = e.target\r\n    const input = target.value\r\n    if (input.length >= this.props.maxLength) {\r\n      let next = target\r\n      next = next.nextElementSibling\r\n      while (next) {\r\n        if (next === null) break\r\n        if (next.tagName.toLowerCase() === 'input') {\r\n          next.focus()\r\n          break\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <input\r\n        type={this.props.type}\r\n        name={this.props.name}\r\n        placeholder={this.props.hint}\r\n        maxLength={this.props.maxLength}\r\n        defaultValue={this.props.value}\r\n        onChange={this.handleChange}\r\n        onKeyDown={this.props.maxLength ? this.handleDelete : null}\r\n        style={this.props.style}\r\n        autoFocus={this.props.autoFocus}\r\n        ref={(c) => this._input = c}\r\n        value={this.props.value}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nAutotabInput.propTypes = {\r\n  name: PropTypes.string,\r\n  onChange: PropTypes.func.isRequired,\r\n  type: PropTypes.string,\r\n  hint: PropTypes.string,\r\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n  maxLength: PropTypes.number,\r\n  style: PropTypes.object,\r\n  autoFocus: PropTypes.bool,\r\n}\r\n\r\nexport default AutotabInput"]},"metadata":{},"sourceType":"module"}