{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\17127\\\\Desktop\\\\IT\\\\react\\\\airGrab\\\\src\\\\page\\\\mine\\\\verificate\\\\inputCode\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport input from 'antd/lib/input';\nimport React from 'react';\nimport style from './index.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Index(props) {\n  _s();\n\n  const [captchas, SetCap] = React.useState([{\n    num: \"\"\n  }, {\n    num: \"\"\n  }, {\n    num: \"\"\n  }, {\n    num: \"\"\n  }, {\n    num: \"\"\n  }, {\n    num: \"\"\n  }]);\n\n  const adjust = index => {\n    let dom = document.getElementById(\"captcha\" + this.activeInput);\n\n    if (index !== this.activeInput && dom) {\n      dom.focus();\n    }\n  };\n\n  const inputFinish = index => {\n    // console.log(index);\n    // console.log(this.captchas);\n    let val = captchas[index].num;\n    this.activeInput = val ? index + 1 : index - 1;\n    let dom = document.getElementById(\"captcha\" + this.activeInput);\n    if (dom) dom.focus();\n\n    if (index == captchas.length - 1) {\n      let code = captchas.map(x => x.num).join(\"\");\n\n      if (code.length == 6) {// this.$emit(\"finish\", code);\n        // console.log(code);\n      }\n    }\n  };\n\n  const inputDirection = (event, index) => {\n    let val = captchas[index].num; // Backspace回退键处理\n\n    if (event.keyCode == 8 && val == \"\") {\n      // 重新校准\n      let dom = document.getElementById(\"captcha\" + (index - 1));\n      this.activeInput = index - 1;\n      if (dom) dom.focus();\n    }\n\n    if (event.keyCode != 8 && val != \"\") {\n      let dom = document.getElementById(\"captcha\" + (index + 1));\n      this.activeInput = index + 1;\n      if (dom) dom.focus();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${style.rowcenter} ${style.captcha_input_wrapper}`,\n    children: captchas.map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"tel\",\n        maxLength: 1,\n        className: `${style.captcha_input_box} ${style.rowcenter}`,\n        onKeyDown: e => inputDirection(e, index),\n        onInput: () => inputFinish(index),\n        onFocus: () => adjust(index)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Index, \"8kLQx1PjdU81JatSdib4XvYA+m8=\");\n\n_c = Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["C:/Users/17127/Desktop/IT/react/airGrab/src/page/mine/verificate/inputCode/index.jsx"],"names":["input","React","style","Index","props","captchas","SetCap","useState","num","adjust","index","dom","document","getElementById","activeInput","focus","inputFinish","val","length","code","map","x","join","inputDirection","event","keyCode","rowcenter","captcha_input_wrapper","item","captcha_input_box","e"],"mappings":"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","sourcesContent":["import input from 'antd/lib/input'\r\nimport React from 'react'\r\nimport style from './index.module.scss'\r\nexport default function Index(props) {\r\n  const [captchas, SetCap] = React.useState([\r\n    { num: \"\" },\r\n    { num: \"\" },\r\n    { num: \"\" },\r\n    { num: \"\" },\r\n    { num: \"\" },\r\n    { num: \"\" },\r\n  ])\r\n  const adjust = (index) => {\r\n    let dom = document.getElementById(\"captcha\" + this.activeInput);\r\n    if (index !== this.activeInput && dom) {\r\n      dom.focus();\r\n    }\r\n  }\r\n  const inputFinish = (index) => {\r\n    // console.log(index);\r\n    // console.log(this.captchas);\r\n    let val = captchas[index].num;\r\n    this.activeInput = val ? index + 1 : index - 1;\r\n    let dom = document.getElementById(\"captcha\" + this.activeInput);\r\n    if (dom) dom.focus();\r\n    if (index == captchas.length - 1) {\r\n      let code = captchas.map((x) => x.num).join(\"\");\r\n      if (code.length == 6) {\r\n        // this.$emit(\"finish\", code);\r\n        // console.log(code);\r\n      }\r\n    }\r\n  }\r\n  const inputDirection = (event, index) => {\r\n    let val = captchas[index].num;\r\n    // Backspace回退键处理\r\n    if (event.keyCode == 8 && val == \"\") {\r\n      // 重新校准\r\n      let dom = document.getElementById(\"captcha\" + (index - 1));\r\n      this.activeInput = index - 1;\r\n      if (dom) dom.focus();\r\n    }\r\n    if (event.keyCode != 8 && val != \"\") {\r\n      let dom = document.getElementById(\"captcha\" + (index + 1));\r\n      this.activeInput = index + 1;\r\n      if (dom) dom.focus();\r\n    }\r\n  }\r\n  return (\r\n    <div className={`${style.rowcenter} ${style.captcha_input_wrapper}`}>\r\n      {\r\n        captchas.map((item, index) => {\r\n          return (\r\n            <input type=\"tel\" maxLength={1} className={`${style.captcha_input_box} ${style.rowcenter}`} key={index} onKeyDown={(e) => inputDirection(e, index)} onInput={() => inputFinish(index)} onFocus={() => adjust(index)}></input>\r\n          )\r\n        })\r\n      }\r\n    </div>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}