{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\17127\\\\Desktop\\\\IT\\\\react\\\\airGrab\\\\src\\\\page\\\\mine\\\\verificate\\\\inputCode\\\\index.jsx\";\n// import input from 'antd/lib/input'\n// import React from 'react'\n// import style from './index.module.scss'\n// export default function Index(props) {\n//   console.log(props);\n//   const [activeInput, setActiveInput] = React.useState(0)\n//   const [captchas, SetCap] = React.useState([\n//     { num: \"\" },\n//     { num: \"\" },\n//     { num: \"\" },\n//     { num: \"\" },\n//     { num: \"\" },\n//     { num: \"\" },\n//   ])\n//   const adjust = (index) => {\n//     let dom = document.getElementById(\"captcha\" + activeInput);\n//     if (index !== activeInput && dom) {\n//       dom.focus();\n//     }\n//   }\n//   const inputFinish = (index) => {\n//     console.log(index);\n//     console.log(captchas);\n//     let val = captchas[index].num;\n//     setActiveInput(val ? index + 1 : index - 1);\n//     let dom = document.getElementById(\"captcha\" + activeInput);\n//     console.log(activeInput);\n//     if (dom) dom.focus();\n//     if (index == captchas.length - 1) {\n//       let code = captchas.map((x) => x.num).join(\"\");\n//       if (code.length == 6) {\n//         // this.$emit(\"finish\", code);\n//         // console.log(code);\n//       }\n//     }\n//   }\n//   const inputDirection = (event, index) => {\n//     // console.log(event.target);\n//     let val = captchas[index].num;\n//     // Backspace回退键处理\n//     if (event.keyCode == 8 && val == \"\") {\n//       // 重新校准\n//       let dom = document.getElementById(\"captcha\" + (index - 1));\n//       console.log(dom);\n//       setActiveInput(index - 1);\n//       if (dom) dom.focus();\n//     }\n//     if (event.keyCode != 8 && val != \"\") {\n//       let dom = document.getElementById(\"captcha\" + (index + 1));\n//       console.log(dom);\n//       setActiveInput(index + 1)\n//       if (dom) dom.focus();\n//     }\n//   }\n//   return (\n//     <div className={`${style.rowcenter} ${style.captcha_input_wrapper}`}>\n//       {\n//         captchas.map((item, index) => {\n//           return (\n//             <input id={`captcha${index}`} type=\"number\" maxLength={1} className={`${style.captcha_input_box} ${style.rowcenter}`} key={index} onKeyDown={(e) => inputDirection(e, index)} onInput={() => inputFinish(index)} onFocus={() => adjust(index)}></input>\n//           )\n//         })\n//       }\n//     </div>\n//   )\n// }\nimport React from 'react';\nimport AutoTabInput from './AutoTabInput.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CodeInput extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.unitOnChange = (index, unit) => {\n      this.props.onChange(index, unit);\n    };\n\n    this.state = {};\n  }\n\n  render() {\n    const codeSty = {\n      marginRight: 10,\n      textAlign: 'center',\n      width: 28,\n      height: 28\n    };\n    const codeStyErr = {\n      marginRight: 10,\n      textAlign: 'center',\n      width: 28,\n      height: 28,\n      borderColor: '#f44236'\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [/*#__PURE__*/_jsxDEV(AutoTabInput, {\n          ref: \"inputmy\",\n          type: \"text\",\n          style: this.props.codeBorderStatus ? codeStyErr : codeSty,\n          autoFocus: true,\n          maxLength: 1,\n          value: this.props.value[0] ? this.props.value[0] : '',\n          onChange: this.unitOnChange.bind(null, 0)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AutoTabInput, {\n          type: \"text\",\n          style: this.props.codeBorderStatus ? codeStyErr : codeSty,\n          maxLength: 1,\n          value: this.props.value[1] ? this.props.value[1] : '',\n          onChange: this.unitOnChange.bind(null, 1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AutoTabInput, {\n          type: \"text\",\n          style: this.props.codeBorderStatus ? codeStyErr : codeSty,\n          maxLength: 1,\n          value: this.props.value[2] ? this.props.value[2] : '',\n          onChange: this.unitOnChange.bind(null, 2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AutoTabInput, {\n          type: \"text\",\n          style: this.props.codeBorderStatus ? codeStyErr : codeSty,\n          maxLength: 1,\n          value: this.props.value[3] ? this.props.value[3] : '',\n          onChange: this.unitOnChange.bind(null, 3)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AutoTabInput, {\n          type: \"text\",\n          style: this.props.codeBorderStatus ? codeStyErr : codeSty,\n          maxLength: 1,\n          value: this.props.value[4] ? this.props.value[4] : '',\n          onChange: this.unitOnChange.bind(null, 4)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AutoTabInput, {\n          type: \"text\",\n          style: this.props.codeBorderStatus ? codeStyErr : codeSty,\n          maxLength: 1,\n          value: this.props.value[5] ? this.props.value[5] : '',\n          onChange: this.unitOnChange.bind(null, 5)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), this.props.allDelete ? /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"icon__dianpuhezi_close\",\n        onClick: () => {\n          this.props.resetCode();\n\n          this.refs.inputmy._input.focus();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this) : '']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default CodeInput;","map":{"version":3,"sources":["C:/Users/17127/Desktop/IT/react/airGrab/src/page/mine/verificate/inputCode/index.jsx"],"names":["React","AutoTabInput","CodeInput","Component","constructor","props","unitOnChange","index","unit","onChange","state","render","codeSty","marginRight","textAlign","width","height","codeStyErr","borderColor","codeBorderStatus","value","bind","allDelete","resetCode","refs","inputmy","_input","focus"],"mappings":"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","sourcesContent":["// import input from 'antd/lib/input'\r\n// import React from 'react'\r\n// import style from './index.module.scss'\r\n// export default function Index(props) {\r\n//   console.log(props);\r\n//   const [activeInput, setActiveInput] = React.useState(0)\r\n//   const [captchas, SetCap] = React.useState([\r\n//     { num: \"\" },\r\n//     { num: \"\" },\r\n//     { num: \"\" },\r\n//     { num: \"\" },\r\n//     { num: \"\" },\r\n//     { num: \"\" },\r\n//   ])\r\n//   const adjust = (index) => {\r\n//     let dom = document.getElementById(\"captcha\" + activeInput);\r\n//     if (index !== activeInput && dom) {\r\n//       dom.focus();\r\n//     }\r\n//   }\r\n//   const inputFinish = (index) => {\r\n//     console.log(index);\r\n//     console.log(captchas);\r\n//     let val = captchas[index].num;\r\n//     setActiveInput(val ? index + 1 : index - 1);\r\n//     let dom = document.getElementById(\"captcha\" + activeInput);\r\n//     console.log(activeInput);\r\n//     if (dom) dom.focus();\r\n//     if (index == captchas.length - 1) {\r\n//       let code = captchas.map((x) => x.num).join(\"\");\r\n//       if (code.length == 6) {\r\n//         // this.$emit(\"finish\", code);\r\n//         // console.log(code);\r\n//       }\r\n//     }\r\n//   }\r\n//   const inputDirection = (event, index) => {\r\n//     // console.log(event.target);\r\n//     let val = captchas[index].num;\r\n//     // Backspace回退键处理\r\n//     if (event.keyCode == 8 && val == \"\") {\r\n//       // 重新校准\r\n//       let dom = document.getElementById(\"captcha\" + (index - 1));\r\n//       console.log(dom);\r\n//       setActiveInput(index - 1);\r\n//       if (dom) dom.focus();\r\n//     }\r\n//     if (event.keyCode != 8 && val != \"\") {\r\n//       let dom = document.getElementById(\"captcha\" + (index + 1));\r\n//       console.log(dom);\r\n//       setActiveInput(index + 1)\r\n//       if (dom) dom.focus();\r\n//     }\r\n//   }\r\n//   return (\r\n//     <div className={`${style.rowcenter} ${style.captcha_input_wrapper}`}>\r\n//       {\r\n//         captchas.map((item, index) => {\r\n//           return (\r\n//             <input id={`captcha${index}`} type=\"number\" maxLength={1} className={`${style.captcha_input_box} ${style.rowcenter}`} key={index} onKeyDown={(e) => inputDirection(e, index)} onInput={() => inputFinish(index)} onFocus={() => adjust(index)}></input>\r\n//           )\r\n//         })\r\n//       }\r\n//     </div>\r\n//   )\r\n// }\r\n\r\nimport React from 'react';\r\nimport AutoTabInput from './AutoTabInput.jsx';\r\n\r\nclass CodeInput extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  unitOnChange = (index, unit) => {\r\n    this.props.onChange(index, unit);\r\n  };\r\n  render() {\r\n    const codeSty = {\r\n      marginRight: 10,\r\n      textAlign: 'center',\r\n      width: 28,\r\n      height: 28\r\n    };\r\n    const codeStyErr = {\r\n      marginRight: 10,\r\n      textAlign: 'center',\r\n      width: 28,\r\n      height: 28,\r\n      borderColor: '#f44236'\r\n    };\r\n    return (\r\n      <div>\r\n        <span>\r\n          <AutoTabInput\r\n            ref=\"inputmy\"\r\n            type=\"text\"\r\n            style={this.props.codeBorderStatus ? codeStyErr : codeSty}\r\n            autoFocus\r\n            maxLength={1}\r\n            value={this.props.value[0] ? this.props.value[0] : ''}\r\n            onChange={this.unitOnChange.bind(null, 0)}\r\n          />\r\n          <AutoTabInput\r\n            type=\"text\"\r\n            style={this.props.codeBorderStatus ? codeStyErr : codeSty}\r\n            maxLength={1}\r\n            value={this.props.value[1] ? this.props.value[1] : ''}\r\n            onChange={this.unitOnChange.bind(null, 1)}\r\n          />\r\n          <AutoTabInput\r\n            type=\"text\"\r\n            style={this.props.codeBorderStatus ? codeStyErr : codeSty}\r\n            maxLength={1}\r\n            value={this.props.value[2] ? this.props.value[2] : ''}\r\n            onChange={this.unitOnChange.bind(null, 2)}\r\n          />\r\n          <AutoTabInput\r\n            type=\"text\"\r\n            style={this.props.codeBorderStatus ? codeStyErr : codeSty}\r\n            maxLength={1}\r\n            value={this.props.value[3] ? this.props.value[3] : ''}\r\n            onChange={this.unitOnChange.bind(null, 3)}\r\n          />\r\n          <AutoTabInput\r\n            type=\"text\"\r\n            style={this.props.codeBorderStatus ? codeStyErr : codeSty}\r\n            maxLength={1}\r\n            value={this.props.value[4] ? this.props.value[4] : ''}\r\n            onChange={this.unitOnChange.bind(null, 4)}\r\n          />\r\n          <AutoTabInput\r\n            type=\"text\"\r\n            style={this.props.codeBorderStatus ? codeStyErr : codeSty}\r\n            maxLength={1}\r\n            value={this.props.value[5] ? this.props.value[5] : ''}\r\n            onChange={this.unitOnChange.bind(null, 5)}\r\n          />\r\n        </span>\r\n        {this.props.allDelete ? (\r\n          <span\r\n            className=\"icon__dianpuhezi_close\"\r\n            onClick={() => {\r\n              this.props.resetCode();\r\n              this.refs.inputmy._input.focus();\r\n            }}\r\n          />\r\n        ) : (\r\n          ''\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default CodeInput;"]},"metadata":{},"sourceType":"module"}